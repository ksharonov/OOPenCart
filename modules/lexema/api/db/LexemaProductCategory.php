<?php
/**
 * Created by PhpStorm.
 * User: aleksey
 * Date: 17.05.2018
 * Time: 11:26
 */

namespace app\modules\lexema\api\db;


use app\models\db\Product;
use app\models\db\ProductCategory;
use app\models\db\Unit;
use app\modules\lexema\api\base\Mapper;
use app\modules\lexema\api\connection\FileConnection;
use app\modules\lexema\api\repository\ProductCategoryRepository;

class LexemaProductCategory extends ProductCategory
{
	use Mapper;

	public $label = 'Категория';
	public $labelAttribute = 'title';

	/**
	 * Гуид корневой категории из АПИ
	 * @var string
	 */
	public $rootCat = 'DE89E4BC-3637-4C39-B6FF-410C48371DDA';

	public $map = [
		'globalId' => 'guid',
		'name' => 'settitle',
		'parentglobalId' => 'setParent'
	];

	public $categories = [
	];

	public function setTitle($key, $value)
	{
		//$this->title = trim(mb_ereg_replace("[^,а-яА-Я\s]", "", $value), ', ');
		$numerical = preg_match('/^[0-9]/', $value);

		if ($numerical) {
			$strNumber = mb_substr($value, 0, 2);
			if ((int)$strNumber > 16) {
				return;
			}
			$this->title =  trim(mb_ereg_replace("[^,а-яА-Я\s]", "", $value), ', ');
		}
	}

	public function setParent($key, $value)
	{
		if ($value == $this->rootCat) {
			// корневые категори имеют parentId = null
			// не более 14
			$this->parentId = null;
			$this->status = ProductCategory::STATUS_PUBLISHED;
			return;
//			$count = ProductCategory::find()
//				->where(['parentId' => null])
//				->andWhere(['status' => ProductCategory::STATUS_PUBLISHED])
//				->count();
//
//			if ($count >= 14) {
//				$this->parentId = null;
//				$this->status = ProductCategory::STATUS_HIDDEN;
// 			} else {
//				$this->parentId = null;
//				$this->status = ProductCategory::STATUS_PUBLISHED;
//			}
//			return;
		}

		$parentCategory = ProductCategory::findByGuid($value, true);

		if (!$parentCategory) {
			$apiCat = ProductCategoryRepository::get()
				//->setSource(FileConnection::get())
				->find(['globalId' => $value])
				->one();

			if (!$apiCat) {
				if ($this->parentId == '-1') {
					return;
				}

				$this->parentId = '-1';
				return;
			} else {
				$parentCategory = new LexemaProductCategory($apiCat);
				$parentCategory->save();
			}
		}

		$this->parentId = $parentCategory->id;
		$this->status = ProductCategory::STATUS_PUBLISHED;
	}

	public function beforeValidate()
	{
		if (!$this->title) {
			return false;
		}
		return parent::beforeValidate(); // TODO: Change the autogenerated stub
	}
}
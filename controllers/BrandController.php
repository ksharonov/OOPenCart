<?php

namespace app\controllers;


use app\models\db\Manufacturer;
use app\system\base\Controller;
use app\models\search\ManufacturerSearch;
use app\system\template\TemplateStore;
use app\helpers\ManufacturerHelper;

class BrandController extends Controller
{
    public function beforeAction($action)
    {
        TemplateStore::setVar("CONTAINER.LAYOUT.SITE.CLASS", 'container');
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $searchModel = new ManufacturerSearch();
        $dataProvider = $searchModel->search([]);

        $manufacturers = ManufacturerHelper::createAlphabetList($dataProvider->models);

        return $this->render('list', [
            'manufacturers' => $manufacturers
        ]);
    }

    public function actionView($slug)
    {
        $searchModel = new ManufacturerSearch();
        $searchModel->slug = $slug;

        $dataProvider = $searchModel->search([]);

        return $this->render('single', [
            'dataProvider' => $dataProvider,
            'searchModel' => $searchModel
        ]);
    }

    public function actionProducts($slug)
    {
        $model = Manufacturer::findOne(['slug' => $slug]);

        return $this->render('products', [
            'model' => $model,
        ]);
    }

    public function actionProductsOld($slug)
    {
        $searchModel = new ManufacturerSearch();
        $searchModel->slug = $slug;

        $dataProvider = $searchModel->search([]);
        $model = $dataProvider->models[0];

        $searchModelSecond = new \app\modules\catalog\widgets\FilterWidget\models\ProductSearch();

        $dataProviderSecond = $searchModelSecond->search([]);
        $dataProviderSecond->query->where(['manufacturerId' => $model->id]);

        return $this->render('products', [
            'dataProvider' => $dataProviderSecond,
            'searchModel' => $searchModelSecond,
            'model' => $model,
        ]);
    }
}